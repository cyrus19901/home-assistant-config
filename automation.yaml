############
# SECURITY #
############

#Arlo ARM
- alias: "Arlo Arm"
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'off'
    to: 'on'
  action:
    service: script.turn_on
    entity_id: script.arlo_arm

#Arlo DISARM
- alias: "Arlo Disarm"
  trigger:
    platform: state
    entity_id: input_boolean.arlo_status
    from: 'on'
    to: 'off'
  action:
    service: script.turn_on
    entity_id: script.arlo_disarm

#########
# OTHER #
#########

#- alias: "Christmas Lights at Sunset"
#  trigger:
#    platform: sun
#    event: sunset
#    offset: "-00:45:00"
#  condition: 
#    - condition: state
#      entity_id: input_boolean.christmas_lights_automation
#      state: 'on'
#  action:
#    service: homeassistant.turn_on
#    entity_id: switch.christmas_lights

#- alias: "Christmas Lights off at 11:00"
#  trigger:
#    platform: time
#    after: '23:00'
#  condition: 
#    - condition: state
#      entity_id: input_boolean.christmas_lights_automation
#      state: 'on'
#  action:
#    service: homeassistant.turn_off
#    entity_id: switch.christmas_lights

- alias: "Plant Light on during Day"
  trigger:
    platform: time
    after: '08:00:00'
  action:
    service: homeassistant.turn_on
    entity_id: switch.plant_light

- alias: "Plant Light off at Night"
  trigger:
    platform: time
    after: '21:00:00'
  action:
    service: homeassistant.turn_off
    entity_id: switch.plant_light

#########
# WEMOS #
#########

- alias: "Button Press On!"
  trigger:
    platform: state
    entity_id: sensor.bed_toggle_switch
    state: "true"
  action:
    service: homeassistant.turn_on
    entity_id: script.andrew_room_bedtime

- alias: "Button Press Off!"
  trigger:
    platform: state
    entity_id: sensor.bed_toggle_switch
    state: "false"
  action:
    service: homeassistant.turn_on
    entity_id: script.andrew_wakeup


###########
# NOTICES #
###########

#Fix bug in climate automation where house cools wildly..
- alias: "Notify Andrew when AC BREAKS"
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'cool'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        below: '70'
  action: 
    - service: notify.notify_push_android
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_operation_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'

#Fix bug in climate automation where house heats wildly..
- alias: "Notify Andrew when AC BREAKS"
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: climate.thermostat
        state: 'heat'
      - condition: numeric_state
        entity_id: sensor.thermostat_setpoint
        above: '72'
  action:
    - service: notify.notify_push_android
      data_template:
        message: AC Broke.. Turning Off...
    - service: climate.set_operation_mode
      data:
        entity_id: climate.thermostat
        operation_mode: 'off'
      

#AC Setpoint changed
- alias: "Notify Andrew when AC setpoint changes"
  trigger:
    - platform: state
      entity_id: sensor.thermostat_setpoint
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.notify_push_android
      data_template:
        message: >
          Setpoint Trigger: {{ trigger.to_state.state }}. Mode: {{ states.sensor.thermostat_operating_mode.state }}

#AC Setpoint changed
- alias: "Notify Andrew when AC Mode changes"
  trigger:
    - platform: state
      entity_id: sensor.thermostat_operating_mode
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.ac_change_notification
        state: 'on'
      - condition: template
        value_template: '{{ trigger.entity_id != None }}'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    - service: notify.notify_push_android
      data_template:
        message: >
          Mode Trigger: {{ states.sensor.thermostat_setpoint.state }}. Mode: {{ trigger.to_state.state }}
